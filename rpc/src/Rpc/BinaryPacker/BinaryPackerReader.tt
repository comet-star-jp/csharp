<#@ template language="C#" #>
<#@ assembly name="System.Core" #>
<#@ import namespace="System.Linq" #>
<#@ import namespace="System.Text" #>
<#@ import namespace="System.Collections.Generic" #>
<#
var types = new string[]{
	"Byte",
	"Int16",
	"Int32",
	"Int64",
	"UInt16",
	"UInt32",
	"UInt64",
	"Single",
	"Double",
	"Boolean",
	"String",
};
#>
namespace BinaryPacker
{
    using System;
    using System.IO;

    public class BinaryPackerReader : BinaryReader
    {
    	public BinaryPackerReader(Stream s) : base(s)
    	{
    	}

<# foreach(var type in types) { #>

        public <#= type #>[] Read<#= type #>Array()
        {
            int count = Read7BitEncodedInt();
            <#= type #>[] xs = new <#= type #>[count];
            for(int i=0; i<count; ++i)
            {
                xs[i] = Read<#= type #>();
            }
            return xs;
        }
<# } #>
    }
}